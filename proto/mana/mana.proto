syntax = "proto3";

package mana;

option go_package = "github.com/tectix/mysticfunds/proto/auth";

import "google/protobuf/timestamp.proto";

service ManaService {
  rpc TransferMana(TransferManaRequest) returns (TransferManaResponse) {}
  rpc GetManaBalance(GetManaBalanceRequest) returns (GetManaBalanceResponse) {}
  rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse) {}
  rpc CreateInvestment(CreateInvestmentRequest) returns (CreateInvestmentResponse) {}
  rpc GetInvestments(GetInvestmentsRequest) returns (GetInvestmentsResponse) {}
  rpc GetInvestmentTypes(GetInvestmentTypesRequest) returns (GetInvestmentTypesResponse) {}
}

// Existing messages
message ManaTransaction {
  int64 id = 1;
  int64 from_wizard_id = 2;
  int64 to_wizard_id = 3;
  int64 amount = 4;
  google.protobuf.Timestamp created_at = 5;
}

message TransferManaRequest {
  int64 from_wizard_id = 1;
  int64 to_wizard_id = 2;
  int64 amount = 3;
}

message TransferManaResponse {
  bool success = 1;
  string message = 2;
  ManaTransaction transaction = 3;
}

message GetManaBalanceRequest {
  int64 wizard_id = 1;
}

message GetManaBalanceResponse {
  int64 balance = 1;
}

message ListTransactionsRequest {
  int64 wizard_id = 1;
  int32 page_size = 2;
  int32 page_number = 3;
}

message ListTransactionsResponse {
  repeated ManaTransaction transactions = 1;
  int32 total_count = 2;
}

// New investment-related messages
message InvestmentType {
  int64 id = 1;
  string name = 2;
  string description = 3;
  int64 min_amount = 4;
  int64 max_amount = 5;
  int32 duration_hours = 6;
  double base_return_rate = 7;
  int32 risk_level = 8;
}

message Investment {
  int64 id = 1;
  int64 wizard_id = 2;
  string investment_type = 3;
  int64 amount = 4;
  int64 start_time = 5;
  int64 end_time = 6;
  string status = 7;
  double actual_return_rate = 8;
  int64 returned_amount = 9;
  int32 risk_level = 10;
}

message CreateInvestmentRequest {
  int64 wizard_id = 1;
  int64 investment_type_id = 2;
  int64 amount = 3;
}

message CreateInvestmentResponse {
  int64 investment_id = 1;
  int64 end_time = 2;
}

message GetInvestmentsRequest {
  int64 wizard_id = 1;
  string status = 2; // Optional filter by status
}

message GetInvestmentsResponse {
  repeated Investment investments = 1;
}

message GetInvestmentTypesRequest {
  int64 min_amount = 1; // Optional filter by minimum amount
  int64 max_amount = 2; // Optional filter by maximum amount
  int32 risk_level = 3; // Optional filter by risk level
}

message GetInvestmentTypesResponse {
  repeated InvestmentType investment_types = 1;
}