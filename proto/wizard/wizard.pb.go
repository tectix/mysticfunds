// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: proto/wizard/wizard.proto

package wizard

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Wizard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name             string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Realm            string                 `protobuf:"bytes,4,opt,name=realm,proto3" json:"realm,omitempty"`
	ManaBalance      int64                  `protobuf:"varint,5,opt,name=mana_balance,json=manaBalance,proto3" json:"mana_balance,omitempty"`
	Element          string                 `protobuf:"bytes,6,opt,name=element,proto3" json:"element,omitempty"`
	Guild            *Guild                 `protobuf:"bytes,7,opt,name=guild,proto3" json:"guild,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExperiencePoints int32                  `protobuf:"varint,10,opt,name=experience_points,json=experiencePoints,proto3" json:"experience_points,omitempty"`
	Level            int32                  `protobuf:"varint,11,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Wizard) Reset() {
	*x = Wizard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wizard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wizard) ProtoMessage() {}

func (x *Wizard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wizard.ProtoReflect.Descriptor instead.
func (*Wizard) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{0}
}

func (x *Wizard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Wizard) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Wizard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Wizard) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *Wizard) GetManaBalance() int64 {
	if x != nil {
		return x.ManaBalance
	}
	return 0
}

func (x *Wizard) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *Wizard) GetGuild() *Guild {
	if x != nil {
		return x.Guild
	}
	return nil
}

func (x *Wizard) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Wizard) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Wizard) GetExperiencePoints() int32 {
	if x != nil {
		return x.ExperiencePoints
	}
	return 0
}

func (x *Wizard) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type Guild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Guild) Reset() {
	*x = Guild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guild) ProtoMessage() {}

func (x *Guild) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guild.ProtoReflect.Descriptor instead.
func (*Guild) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{1}
}

func (x *Guild) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Guild) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateWizardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Realm   string `protobuf:"bytes,3,opt,name=realm,proto3" json:"realm,omitempty"`
	Element string `protobuf:"bytes,4,opt,name=element,proto3" json:"element,omitempty"`
}

func (x *CreateWizardRequest) Reset() {
	*x = CreateWizardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWizardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWizardRequest) ProtoMessage() {}

func (x *CreateWizardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWizardRequest.ProtoReflect.Descriptor instead.
func (*CreateWizardRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{2}
}

func (x *CreateWizardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateWizardRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWizardRequest) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *CreateWizardRequest) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

type GetWizardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetWizardRequest) Reset() {
	*x = GetWizardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWizardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWizardRequest) ProtoMessage() {}

func (x *GetWizardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWizardRequest.ProtoReflect.Descriptor instead.
func (*GetWizardRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{3}
}

func (x *GetWizardRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateWizardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Realm   string `protobuf:"bytes,3,opt,name=realm,proto3" json:"realm,omitempty"`
	Element string `protobuf:"bytes,4,opt,name=element,proto3" json:"element,omitempty"`
}

func (x *UpdateWizardRequest) Reset() {
	*x = UpdateWizardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWizardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWizardRequest) ProtoMessage() {}

func (x *UpdateWizardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWizardRequest.ProtoReflect.Descriptor instead.
func (*UpdateWizardRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateWizardRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWizardRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWizardRequest) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *UpdateWizardRequest) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

type ListWizardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize   int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber int32  `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	UserId     int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Optional: filter wizards by user
	Realm      string `protobuf:"bytes,4,opt,name=realm,proto3" json:"realm,omitempty"`                  // Optional: filter by realm for exploration
}

func (x *ListWizardsRequest) Reset() {
	*x = ListWizardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWizardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWizardsRequest) ProtoMessage() {}

func (x *ListWizardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWizardsRequest.ProtoReflect.Descriptor instead.
func (*ListWizardsRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{5}
}

func (x *ListWizardsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListWizardsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListWizardsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListWizardsRequest) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

type ListWizardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wizards    []*Wizard `protobuf:"bytes,1,rep,name=wizards,proto3" json:"wizards,omitempty"`
	TotalCount int32     `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListWizardsResponse) Reset() {
	*x = ListWizardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWizardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWizardsResponse) ProtoMessage() {}

func (x *ListWizardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWizardsResponse.ProtoReflect.Descriptor instead.
func (*ListWizardsResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{6}
}

func (x *ListWizardsResponse) GetWizards() []*Wizard {
	if x != nil {
		return x.Wizards
	}
	return nil
}

func (x *ListWizardsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type DeleteWizardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteWizardRequest) Reset() {
	*x = DeleteWizardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWizardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWizardRequest) ProtoMessage() {}

func (x *DeleteWizardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWizardRequest.ProtoReflect.Descriptor instead.
func (*DeleteWizardRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteWizardRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteWizardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteWizardResponse) Reset() {
	*x = DeleteWizardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWizardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWizardResponse) ProtoMessage() {}

func (x *DeleteWizardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWizardResponse.ProtoReflect.Descriptor instead.
func (*DeleteWizardResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteWizardResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type JoinGuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId  int64  `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	GuildName string `protobuf:"bytes,2,opt,name=guild_name,json=guildName,proto3" json:"guild_name,omitempty"`
}

func (x *JoinGuildRequest) Reset() {
	*x = JoinGuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGuildRequest) ProtoMessage() {}

func (x *JoinGuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGuildRequest.ProtoReflect.Descriptor instead.
func (*JoinGuildRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{9}
}

func (x *JoinGuildRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *JoinGuildRequest) GetGuildName() string {
	if x != nil {
		return x.GuildName
	}
	return ""
}

type LeaveGuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
}

func (x *LeaveGuildRequest) Reset() {
	*x = LeaveGuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveGuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveGuildRequest) ProtoMessage() {}

func (x *LeaveGuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveGuildRequest.ProtoReflect.Descriptor instead.
func (*LeaveGuildRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{10}
}

func (x *LeaveGuildRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

// Job messages
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RealmId             int64                  `protobuf:"varint,2,opt,name=realm_id,json=realmId,proto3" json:"realm_id,omitempty"`
	RealmName           string                 `protobuf:"bytes,3,opt,name=realm_name,json=realmName,proto3" json:"realm_name,omitempty"`
	Title               string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description         string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	RequiredElement     string                 `protobuf:"bytes,6,opt,name=required_element,json=requiredElement,proto3" json:"required_element,omitempty"`
	RequiredLevel       int32                  `protobuf:"varint,7,opt,name=required_level,json=requiredLevel,proto3" json:"required_level,omitempty"`
	ManaRewardPerHour   int32                  `protobuf:"varint,8,opt,name=mana_reward_per_hour,json=manaRewardPerHour,proto3" json:"mana_reward_per_hour,omitempty"`
	ExpRewardPerHour    int32                  `protobuf:"varint,9,opt,name=exp_reward_per_hour,json=expRewardPerHour,proto3" json:"exp_reward_per_hour,omitempty"`
	DurationMinutes     int32                  `protobuf:"varint,10,opt,name=duration_minutes,json=durationMinutes,proto3" json:"duration_minutes,omitempty"`
	MaxWizards          int32                  `protobuf:"varint,11,opt,name=max_wizards,json=maxWizards,proto3" json:"max_wizards,omitempty"`
	CurrentlyAssigned   int32                  `protobuf:"varint,12,opt,name=currently_assigned,json=currentlyAssigned,proto3" json:"currently_assigned,omitempty"`
	Difficulty          string                 `protobuf:"bytes,13,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	JobType             string                 `protobuf:"bytes,14,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	Location            string                 `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	SpecialRequirements string                 `protobuf:"bytes,16,opt,name=special_requirements,json=specialRequirements,proto3" json:"special_requirements,omitempty"`
	CreatedByWizardId   int64                  `protobuf:"varint,17,opt,name=created_by_wizard_id,json=createdByWizardId,proto3" json:"created_by_wizard_id,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsActive            bool                   `protobuf:"varint,20,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{11}
}

func (x *Job) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Job) GetRealmId() int64 {
	if x != nil {
		return x.RealmId
	}
	return 0
}

func (x *Job) GetRealmName() string {
	if x != nil {
		return x.RealmName
	}
	return ""
}

func (x *Job) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Job) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Job) GetRequiredElement() string {
	if x != nil {
		return x.RequiredElement
	}
	return ""
}

func (x *Job) GetRequiredLevel() int32 {
	if x != nil {
		return x.RequiredLevel
	}
	return 0
}

func (x *Job) GetManaRewardPerHour() int32 {
	if x != nil {
		return x.ManaRewardPerHour
	}
	return 0
}

func (x *Job) GetExpRewardPerHour() int32 {
	if x != nil {
		return x.ExpRewardPerHour
	}
	return 0
}

func (x *Job) GetDurationMinutes() int32 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

func (x *Job) GetMaxWizards() int32 {
	if x != nil {
		return x.MaxWizards
	}
	return 0
}

func (x *Job) GetCurrentlyAssigned() int32 {
	if x != nil {
		return x.CurrentlyAssigned
	}
	return 0
}

func (x *Job) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *Job) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

func (x *Job) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Job) GetSpecialRequirements() string {
	if x != nil {
		return x.SpecialRequirements
	}
	return ""
}

func (x *Job) GetCreatedByWizardId() int64 {
	if x != nil {
		return x.CreatedByWizardId
	}
	return 0
}

func (x *Job) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Job) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Job) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type JobAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	JobId       int64                  `protobuf:"varint,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	WizardId    int64                  `protobuf:"varint,3,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	WizardName  string                 `protobuf:"bytes,4,opt,name=wizard_name,json=wizardName,proto3" json:"wizard_name,omitempty"`
	AssignedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=assigned_at,json=assignedAt,proto3" json:"assigned_at,omitempty"`
	StartedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	Status      string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	ManaEarned  int32                  `protobuf:"varint,9,opt,name=mana_earned,json=manaEarned,proto3" json:"mana_earned,omitempty"`
	ExpEarned   int32                  `protobuf:"varint,10,opt,name=exp_earned,json=expEarned,proto3" json:"exp_earned,omitempty"`
	Notes       string                 `protobuf:"bytes,11,opt,name=notes,proto3" json:"notes,omitempty"`
	Job         *Job                   `protobuf:"bytes,12,opt,name=job,proto3" json:"job,omitempty"`
	Progress    *JobProgress           `protobuf:"bytes,13,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *JobAssignment) Reset() {
	*x = JobAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAssignment) ProtoMessage() {}

func (x *JobAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAssignment.ProtoReflect.Descriptor instead.
func (*JobAssignment) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{12}
}

func (x *JobAssignment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobAssignment) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobAssignment) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *JobAssignment) GetWizardName() string {
	if x != nil {
		return x.WizardName
	}
	return ""
}

func (x *JobAssignment) GetAssignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AssignedAt
	}
	return nil
}

func (x *JobAssignment) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *JobAssignment) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *JobAssignment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobAssignment) GetManaEarned() int32 {
	if x != nil {
		return x.ManaEarned
	}
	return 0
}

func (x *JobAssignment) GetExpEarned() int32 {
	if x != nil {
		return x.ExpEarned
	}
	return 0
}

func (x *JobAssignment) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *JobAssignment) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *JobAssignment) GetProgress() *JobProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type JobProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AssignmentId       int64                  `protobuf:"varint,2,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	StartedAt          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	LastUpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_updated_at,json=lastUpdatedAt,proto3" json:"last_updated_at,omitempty"`
	ProgressPercentage int32                  `protobuf:"varint,5,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"`
	TimeWorkedMinutes  int32                  `protobuf:"varint,6,opt,name=time_worked_minutes,json=timeWorkedMinutes,proto3" json:"time_worked_minutes,omitempty"`
	IsActive           bool                   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *JobProgress) Reset() {
	*x = JobProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgress) ProtoMessage() {}

func (x *JobProgress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProgress.ProtoReflect.Descriptor instead.
func (*JobProgress) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{13}
}

func (x *JobProgress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *JobProgress) GetAssignmentId() int64 {
	if x != nil {
		return x.AssignmentId
	}
	return 0
}

func (x *JobProgress) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *JobProgress) GetLastUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedAt
	}
	return nil
}

func (x *JobProgress) GetProgressPercentage() int32 {
	if x != nil {
		return x.ProgressPercentage
	}
	return 0
}

func (x *JobProgress) GetTimeWorkedMinutes() int32 {
	if x != nil {
		return x.TimeWorkedMinutes
	}
	return 0
}

func (x *JobProgress) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *JobProgress) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Job requests
type CreateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealmId             int64  `protobuf:"varint,1,opt,name=realm_id,json=realmId,proto3" json:"realm_id,omitempty"`
	RealmName           string `protobuf:"bytes,2,opt,name=realm_name,json=realmName,proto3" json:"realm_name,omitempty"`
	Title               string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description         string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	RequiredElement     string `protobuf:"bytes,5,opt,name=required_element,json=requiredElement,proto3" json:"required_element,omitempty"`
	RequiredLevel       int32  `protobuf:"varint,6,opt,name=required_level,json=requiredLevel,proto3" json:"required_level,omitempty"`
	ManaRewardPerHour   int32  `protobuf:"varint,7,opt,name=mana_reward_per_hour,json=manaRewardPerHour,proto3" json:"mana_reward_per_hour,omitempty"`
	ExpRewardPerHour    int32  `protobuf:"varint,8,opt,name=exp_reward_per_hour,json=expRewardPerHour,proto3" json:"exp_reward_per_hour,omitempty"`
	DurationMinutes     int32  `protobuf:"varint,9,opt,name=duration_minutes,json=durationMinutes,proto3" json:"duration_minutes,omitempty"`
	MaxWizards          int32  `protobuf:"varint,10,opt,name=max_wizards,json=maxWizards,proto3" json:"max_wizards,omitempty"`
	Difficulty          string `protobuf:"bytes,11,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	JobType             string `protobuf:"bytes,12,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	Location            string `protobuf:"bytes,13,opt,name=location,proto3" json:"location,omitempty"`
	SpecialRequirements string `protobuf:"bytes,14,opt,name=special_requirements,json=specialRequirements,proto3" json:"special_requirements,omitempty"`
	CreatedByWizardId   int64  `protobuf:"varint,15,opt,name=created_by_wizard_id,json=createdByWizardId,proto3" json:"created_by_wizard_id,omitempty"`
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{14}
}

func (x *CreateJobRequest) GetRealmId() int64 {
	if x != nil {
		return x.RealmId
	}
	return 0
}

func (x *CreateJobRequest) GetRealmName() string {
	if x != nil {
		return x.RealmName
	}
	return ""
}

func (x *CreateJobRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateJobRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateJobRequest) GetRequiredElement() string {
	if x != nil {
		return x.RequiredElement
	}
	return ""
}

func (x *CreateJobRequest) GetRequiredLevel() int32 {
	if x != nil {
		return x.RequiredLevel
	}
	return 0
}

func (x *CreateJobRequest) GetManaRewardPerHour() int32 {
	if x != nil {
		return x.ManaRewardPerHour
	}
	return 0
}

func (x *CreateJobRequest) GetExpRewardPerHour() int32 {
	if x != nil {
		return x.ExpRewardPerHour
	}
	return 0
}

func (x *CreateJobRequest) GetDurationMinutes() int32 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

func (x *CreateJobRequest) GetMaxWizards() int32 {
	if x != nil {
		return x.MaxWizards
	}
	return 0
}

func (x *CreateJobRequest) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *CreateJobRequest) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

func (x *CreateJobRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateJobRequest) GetSpecialRequirements() string {
	if x != nil {
		return x.SpecialRequirements
	}
	return ""
}

func (x *CreateJobRequest) GetCreatedByWizardId() int64 {
	if x != nil {
		return x.CreatedByWizardId
	}
	return 0
}

type GetJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRequest.ProtoReflect.Descriptor instead.
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{15}
}

func (x *GetJobRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListJobsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize   int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber int32  `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	Realm      string `protobuf:"bytes,3,opt,name=realm,proto3" json:"realm,omitempty"`
	Element    string `protobuf:"bytes,4,opt,name=element,proto3" json:"element,omitempty"`
	Difficulty string `protobuf:"bytes,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	OnlyActive bool   `protobuf:"varint,6,opt,name=only_active,json=onlyActive,proto3" json:"only_active,omitempty"`
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{16}
}

func (x *ListJobsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListJobsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListJobsRequest) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *ListJobsRequest) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *ListJobsRequest) GetDifficulty() string {
	if x != nil {
		return x.Difficulty
	}
	return ""
}

func (x *ListJobsRequest) GetOnlyActive() bool {
	if x != nil {
		return x.OnlyActive
	}
	return false
}

type ListJobsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs       []*Job `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	TotalCount int32  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{17}
}

func (x *ListJobsResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ListJobsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UpdateJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description       string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ManaRewardPerHour int32  `protobuf:"varint,4,opt,name=mana_reward_per_hour,json=manaRewardPerHour,proto3" json:"mana_reward_per_hour,omitempty"`
	ExpRewardPerHour  int32  `protobuf:"varint,5,opt,name=exp_reward_per_hour,json=expRewardPerHour,proto3" json:"exp_reward_per_hour,omitempty"`
	MaxWizards        int32  `protobuf:"varint,6,opt,name=max_wizards,json=maxWizards,proto3" json:"max_wizards,omitempty"`
	IsActive          bool   `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdateJobRequest) Reset() {
	*x = UpdateJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobRequest) ProtoMessage() {}

func (x *UpdateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateJobRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateJobRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateJobRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateJobRequest) GetManaRewardPerHour() int32 {
	if x != nil {
		return x.ManaRewardPerHour
	}
	return 0
}

func (x *UpdateJobRequest) GetExpRewardPerHour() int32 {
	if x != nil {
		return x.ExpRewardPerHour
	}
	return 0
}

func (x *UpdateJobRequest) GetMaxWizards() int32 {
	if x != nil {
		return x.MaxWizards
	}
	return 0
}

func (x *UpdateJobRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type DeleteJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteJobRequest) Reset() {
	*x = DeleteJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobRequest) ProtoMessage() {}

func (x *DeleteJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteJobRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteJobResponse) Reset() {
	*x = DeleteJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobResponse) ProtoMessage() {}

func (x *DeleteJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobResponse.ProtoReflect.Descriptor instead.
func (*DeleteJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Job assignment requests
type AssignWizardToJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId    int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	WizardId int64 `protobuf:"varint,2,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
}

func (x *AssignWizardToJobRequest) Reset() {
	*x = AssignWizardToJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignWizardToJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignWizardToJobRequest) ProtoMessage() {}

func (x *AssignWizardToJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignWizardToJobRequest.ProtoReflect.Descriptor instead.
func (*AssignWizardToJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{21}
}

func (x *AssignWizardToJobRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *AssignWizardToJobRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

type GetJobAssignmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId   int64  `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	JobId      int64  `protobuf:"varint,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	PageSize   int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber int32  `protobuf:"varint,5,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *GetJobAssignmentsRequest) Reset() {
	*x = GetJobAssignmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobAssignmentsRequest) ProtoMessage() {}

func (x *GetJobAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*GetJobAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{22}
}

func (x *GetJobAssignmentsRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *GetJobAssignmentsRequest) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *GetJobAssignmentsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetJobAssignmentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetJobAssignmentsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetJobAssignmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments []*JobAssignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	TotalCount  int32            `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetJobAssignmentsResponse) Reset() {
	*x = GetJobAssignmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobAssignmentsResponse) ProtoMessage() {}

func (x *GetJobAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*GetJobAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{23}
}

func (x *GetJobAssignmentsResponse) GetAssignments() []*JobAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *GetJobAssignmentsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CompleteJobAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId int64 `protobuf:"varint,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
}

func (x *CompleteJobAssignmentRequest) Reset() {
	*x = CompleteJobAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteJobAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteJobAssignmentRequest) ProtoMessage() {}

func (x *CompleteJobAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteJobAssignmentRequest.ProtoReflect.Descriptor instead.
func (*CompleteJobAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{24}
}

func (x *CompleteJobAssignmentRequest) GetAssignmentId() int64 {
	if x != nil {
		return x.AssignmentId
	}
	return 0
}

type CancelJobAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId int64  `protobuf:"varint,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	Reason       string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CancelJobAssignmentRequest) Reset() {
	*x = CancelJobAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelJobAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobAssignmentRequest) ProtoMessage() {}

func (x *CancelJobAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobAssignmentRequest.ProtoReflect.Descriptor instead.
func (*CancelJobAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{25}
}

func (x *CancelJobAssignmentRequest) GetAssignmentId() int64 {
	if x != nil {
		return x.AssignmentId
	}
	return 0
}

func (x *CancelJobAssignmentRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Job progress requests
type UpdateJobProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId       int64 `protobuf:"varint,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	ProgressPercentage int32 `protobuf:"varint,2,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"`
	TimeWorkedMinutes  int32 `protobuf:"varint,3,opt,name=time_worked_minutes,json=timeWorkedMinutes,proto3" json:"time_worked_minutes,omitempty"`
}

func (x *UpdateJobProgressRequest) Reset() {
	*x = UpdateJobProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJobProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobProgressRequest) ProtoMessage() {}

func (x *UpdateJobProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobProgressRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateJobProgressRequest) GetAssignmentId() int64 {
	if x != nil {
		return x.AssignmentId
	}
	return 0
}

func (x *UpdateJobProgressRequest) GetProgressPercentage() int32 {
	if x != nil {
		return x.ProgressPercentage
	}
	return 0
}

func (x *UpdateJobProgressRequest) GetTimeWorkedMinutes() int32 {
	if x != nil {
		return x.TimeWorkedMinutes
	}
	return 0
}

type GetJobProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId int64 `protobuf:"varint,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
}

func (x *GetJobProgressRequest) Reset() {
	*x = GetJobProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobProgressRequest) ProtoMessage() {}

func (x *GetJobProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobProgressRequest.ProtoReflect.Descriptor instead.
func (*GetJobProgressRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{27}
}

func (x *GetJobProgressRequest) GetAssignmentId() int64 {
	if x != nil {
		return x.AssignmentId
	}
	return 0
}

// Activity log requests
type GetActivitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WizardId     int64  `protobuf:"varint,2,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	ActivityType string `protobuf:"bytes,3,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	PageSize     int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber   int32  `protobuf:"varint,5,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *GetActivitiesRequest) Reset() {
	*x = GetActivitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivitiesRequest) ProtoMessage() {}

func (x *GetActivitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivitiesRequest.ProtoReflect.Descriptor instead.
func (*GetActivitiesRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{28}
}

func (x *GetActivitiesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetActivitiesRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *GetActivitiesRequest) GetActivityType() string {
	if x != nil {
		return x.ActivityType
	}
	return ""
}

func (x *GetActivitiesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetActivitiesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetActivitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activities []*ActivityLog `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty"`
	TotalCount int32          `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetActivitiesResponse) Reset() {
	*x = GetActivitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivitiesResponse) ProtoMessage() {}

func (x *GetActivitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivitiesResponse.ProtoReflect.Descriptor instead.
func (*GetActivitiesResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{29}
}

func (x *GetActivitiesResponse) GetActivities() []*ActivityLog {
	if x != nil {
		return x.Activities
	}
	return nil
}

func (x *GetActivitiesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ActivityLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId              int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WizardId            int64                  `protobuf:"varint,3,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	ActivityType        string                 `protobuf:"bytes,4,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	ActivityDescription string                 `protobuf:"bytes,5,opt,name=activity_description,json=activityDescription,proto3" json:"activity_description,omitempty"`
	Metadata            string                 `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ActivityLog) Reset() {
	*x = ActivityLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLog) ProtoMessage() {}

func (x *ActivityLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLog.ProtoReflect.Descriptor instead.
func (*ActivityLog) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{30}
}

func (x *ActivityLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityLog) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ActivityLog) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *ActivityLog) GetActivityType() string {
	if x != nil {
		return x.ActivityType
	}
	return ""
}

func (x *ActivityLog) GetActivityDescription() string {
	if x != nil {
		return x.ActivityDescription
	}
	return ""
}

func (x *ActivityLog) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *ActivityLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Realm messages
type GetRealmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRealmsRequest) Reset() {
	*x = GetRealmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRealmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealmsRequest) ProtoMessage() {}

func (x *GetRealmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealmsRequest.ProtoReflect.Descriptor instead.
func (*GetRealmsRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{31}
}

type GetRealmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Realms []*Realm `protobuf:"bytes,1,rep,name=realms,proto3" json:"realms,omitempty"`
}

func (x *GetRealmsResponse) Reset() {
	*x = GetRealmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRealmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRealmsResponse) ProtoMessage() {}

func (x *GetRealmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRealmsResponse.ProtoReflect.Descriptor instead.
func (*GetRealmsResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{32}
}

func (x *GetRealmsResponse) GetRealms() []*Realm {
	if x != nil {
		return x.Realms
	}
	return nil
}

type Realm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Realm) Reset() {
	*x = Realm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Realm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Realm) ProtoMessage() {}

func (x *Realm) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Realm.ProtoReflect.Descriptor instead.
func (*Realm) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{33}
}

func (x *Realm) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Realm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Realm) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Mana management messages
type GetManaBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
}

func (x *GetManaBalanceRequest) Reset() {
	*x = GetManaBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManaBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManaBalanceRequest) ProtoMessage() {}

func (x *GetManaBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManaBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetManaBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{34}
}

func (x *GetManaBalanceRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

type GetManaBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetManaBalanceResponse) Reset() {
	*x = GetManaBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManaBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManaBalanceResponse) ProtoMessage() {}

func (x *GetManaBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManaBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetManaBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{35}
}

func (x *GetManaBalanceResponse) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type UpdateManaBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId int64  `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	Amount   int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"` // Can be positive (add) or negative (subtract)
	Reason   string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`  // Optional reason for the update
}

func (x *UpdateManaBalanceRequest) Reset() {
	*x = UpdateManaBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManaBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManaBalanceRequest) ProtoMessage() {}

func (x *UpdateManaBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManaBalanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateManaBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateManaBalanceRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *UpdateManaBalanceRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UpdateManaBalanceRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UpdateManaBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewBalance int64 `protobuf:"varint,1,opt,name=new_balance,json=newBalance,proto3" json:"new_balance,omitempty"`
	Success    bool  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateManaBalanceResponse) Reset() {
	*x = UpdateManaBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManaBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManaBalanceResponse) ProtoMessage() {}

func (x *UpdateManaBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManaBalanceResponse.ProtoReflect.Descriptor instead.
func (*UpdateManaBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateManaBalanceResponse) GetNewBalance() int64 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *UpdateManaBalanceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TransferManaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromWizardId int64  `protobuf:"varint,1,opt,name=from_wizard_id,json=fromWizardId,proto3" json:"from_wizard_id,omitempty"`
	ToWizardId   int64  `protobuf:"varint,2,opt,name=to_wizard_id,json=toWizardId,proto3" json:"to_wizard_id,omitempty"`
	Amount       int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Reason       string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"` // Optional reason for the transfer
}

func (x *TransferManaRequest) Reset() {
	*x = TransferManaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferManaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferManaRequest) ProtoMessage() {}

func (x *TransferManaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferManaRequest.ProtoReflect.Descriptor instead.
func (*TransferManaRequest) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{38}
}

func (x *TransferManaRequest) GetFromWizardId() int64 {
	if x != nil {
		return x.FromWizardId
	}
	return 0
}

func (x *TransferManaRequest) GetToWizardId() int64 {
	if x != nil {
		return x.ToWizardId
	}
	return 0
}

func (x *TransferManaRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferManaRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TransferManaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TransferManaResponse) Reset() {
	*x = TransferManaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_wizard_wizard_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferManaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferManaResponse) ProtoMessage() {}

func (x *TransferManaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_wizard_wizard_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferManaResponse.ProtoReflect.Descriptor instead.
func (*TransferManaResponse) Descriptor() ([]byte, []int) {
	return file_proto_wizard_wizard_proto_rawDescGZIP(), []int{39}
}

func (x *TransferManaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TransferManaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_wizard_wizard_proto protoreflect.FileDescriptor

var file_proto_wizard_wizard_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2f, 0x77,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x77, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x02, 0x0a, 0x06, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x05, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x2b, 0x0a,
	0x05, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x22,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x69, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x22, 0x60, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x07, 0x77, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x4e, 0x0a, 0x10,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x30, 0x0a, 0x11,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x82,
	0x06, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61,
	0x6e, 0x61, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x65,
	0x78, 0x70, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f,
	0x75, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x70, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x57,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x6c, 0x79, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x14,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x2f, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x77, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x22, 0xe9, 0x03, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x6e,
	0x61, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x6d, 0x61, 0x6e, 0x61, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x78, 0x70, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x77,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x2f,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xfa, 0x02, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x42, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbd, 0x04, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50,
	0x65, 0x72, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65,
	0x72, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc0, 0x01,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x22, 0x54, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf8, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72,
	0x48, 0x6f, 0x75, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x5f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x65, 0x78, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x65, 0x72, 0x48,
	0x6f, 0x75, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x4e, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x57, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x43, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x64, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x82, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x31, 0x0a, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x61, 0x6c,
	0x6d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x05, 0x52, 0x65, 0x61,
	0x6c, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x32,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0x67, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e,
	0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x4d, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x57, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d,
	0x61, 0x6e, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0xf0, 0x0c, 0x0a, 0x0d, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x12, 0x1b, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e,
	0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x12, 0x18, 0x2e,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x12, 0x1b, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x18, 0x2e, 0x77,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x19, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x12, 0x18, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x77, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x06, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x12, 0x15, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x77, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x4c, 0x69, 0x73,
	0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x17, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x18, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0b, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x22, 0x00,
	0x12, 0x42, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x18, 0x2e,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x57, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x54, 0x6f, 0x4a, 0x6f, 0x62, 0x12, 0x20, 0x2e, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x54,
	0x6f, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x77, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x77, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4a, 0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4a,
	0x6f, 0x62, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x20, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x2e, 0x77,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x77, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x12,
	0x18, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20,
	0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4d, 0x61, 0x6e, 0x61, 0x12, 0x1b, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x78, 0x2f, 0x6d, 0x79, 0x73, 0x74, 0x69, 0x63, 0x66, 0x75,
	0x6e, 0x64, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_wizard_wizard_proto_rawDescOnce sync.Once
	file_proto_wizard_wizard_proto_rawDescData = file_proto_wizard_wizard_proto_rawDesc
)

func file_proto_wizard_wizard_proto_rawDescGZIP() []byte {
	file_proto_wizard_wizard_proto_rawDescOnce.Do(func() {
		file_proto_wizard_wizard_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_wizard_wizard_proto_rawDescData)
	})
	return file_proto_wizard_wizard_proto_rawDescData
}

var file_proto_wizard_wizard_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_proto_wizard_wizard_proto_goTypes = []any{
	(*Wizard)(nil),                       // 0: wizard.Wizard
	(*Guild)(nil),                        // 1: wizard.Guild
	(*CreateWizardRequest)(nil),          // 2: wizard.CreateWizardRequest
	(*GetWizardRequest)(nil),             // 3: wizard.GetWizardRequest
	(*UpdateWizardRequest)(nil),          // 4: wizard.UpdateWizardRequest
	(*ListWizardsRequest)(nil),           // 5: wizard.ListWizardsRequest
	(*ListWizardsResponse)(nil),          // 6: wizard.ListWizardsResponse
	(*DeleteWizardRequest)(nil),          // 7: wizard.DeleteWizardRequest
	(*DeleteWizardResponse)(nil),         // 8: wizard.DeleteWizardResponse
	(*JoinGuildRequest)(nil),             // 9: wizard.JoinGuildRequest
	(*LeaveGuildRequest)(nil),            // 10: wizard.LeaveGuildRequest
	(*Job)(nil),                          // 11: wizard.Job
	(*JobAssignment)(nil),                // 12: wizard.JobAssignment
	(*JobProgress)(nil),                  // 13: wizard.JobProgress
	(*CreateJobRequest)(nil),             // 14: wizard.CreateJobRequest
	(*GetJobRequest)(nil),                // 15: wizard.GetJobRequest
	(*ListJobsRequest)(nil),              // 16: wizard.ListJobsRequest
	(*ListJobsResponse)(nil),             // 17: wizard.ListJobsResponse
	(*UpdateJobRequest)(nil),             // 18: wizard.UpdateJobRequest
	(*DeleteJobRequest)(nil),             // 19: wizard.DeleteJobRequest
	(*DeleteJobResponse)(nil),            // 20: wizard.DeleteJobResponse
	(*AssignWizardToJobRequest)(nil),     // 21: wizard.AssignWizardToJobRequest
	(*GetJobAssignmentsRequest)(nil),     // 22: wizard.GetJobAssignmentsRequest
	(*GetJobAssignmentsResponse)(nil),    // 23: wizard.GetJobAssignmentsResponse
	(*CompleteJobAssignmentRequest)(nil), // 24: wizard.CompleteJobAssignmentRequest
	(*CancelJobAssignmentRequest)(nil),   // 25: wizard.CancelJobAssignmentRequest
	(*UpdateJobProgressRequest)(nil),     // 26: wizard.UpdateJobProgressRequest
	(*GetJobProgressRequest)(nil),        // 27: wizard.GetJobProgressRequest
	(*GetActivitiesRequest)(nil),         // 28: wizard.GetActivitiesRequest
	(*GetActivitiesResponse)(nil),        // 29: wizard.GetActivitiesResponse
	(*ActivityLog)(nil),                  // 30: wizard.ActivityLog
	(*GetRealmsRequest)(nil),             // 31: wizard.GetRealmsRequest
	(*GetRealmsResponse)(nil),            // 32: wizard.GetRealmsResponse
	(*Realm)(nil),                        // 33: wizard.Realm
	(*GetManaBalanceRequest)(nil),        // 34: wizard.GetManaBalanceRequest
	(*GetManaBalanceResponse)(nil),       // 35: wizard.GetManaBalanceResponse
	(*UpdateManaBalanceRequest)(nil),     // 36: wizard.UpdateManaBalanceRequest
	(*UpdateManaBalanceResponse)(nil),    // 37: wizard.UpdateManaBalanceResponse
	(*TransferManaRequest)(nil),          // 38: wizard.TransferManaRequest
	(*TransferManaResponse)(nil),         // 39: wizard.TransferManaResponse
	(*timestamppb.Timestamp)(nil),        // 40: google.protobuf.Timestamp
}
var file_proto_wizard_wizard_proto_depIdxs = []int32{
	1,  // 0: wizard.Wizard.guild:type_name -> wizard.Guild
	40, // 1: wizard.Wizard.created_at:type_name -> google.protobuf.Timestamp
	40, // 2: wizard.Wizard.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 3: wizard.ListWizardsResponse.wizards:type_name -> wizard.Wizard
	40, // 4: wizard.Job.created_at:type_name -> google.protobuf.Timestamp
	40, // 5: wizard.Job.updated_at:type_name -> google.protobuf.Timestamp
	40, // 6: wizard.JobAssignment.assigned_at:type_name -> google.protobuf.Timestamp
	40, // 7: wizard.JobAssignment.started_at:type_name -> google.protobuf.Timestamp
	40, // 8: wizard.JobAssignment.completed_at:type_name -> google.protobuf.Timestamp
	11, // 9: wizard.JobAssignment.job:type_name -> wizard.Job
	13, // 10: wizard.JobAssignment.progress:type_name -> wizard.JobProgress
	40, // 11: wizard.JobProgress.started_at:type_name -> google.protobuf.Timestamp
	40, // 12: wizard.JobProgress.last_updated_at:type_name -> google.protobuf.Timestamp
	40, // 13: wizard.JobProgress.created_at:type_name -> google.protobuf.Timestamp
	11, // 14: wizard.ListJobsResponse.jobs:type_name -> wizard.Job
	12, // 15: wizard.GetJobAssignmentsResponse.assignments:type_name -> wizard.JobAssignment
	30, // 16: wizard.GetActivitiesResponse.activities:type_name -> wizard.ActivityLog
	40, // 17: wizard.ActivityLog.created_at:type_name -> google.protobuf.Timestamp
	33, // 18: wizard.GetRealmsResponse.realms:type_name -> wizard.Realm
	2,  // 19: wizard.WizardService.CreateWizard:input_type -> wizard.CreateWizardRequest
	3,  // 20: wizard.WizardService.GetWizard:input_type -> wizard.GetWizardRequest
	4,  // 21: wizard.WizardService.UpdateWizard:input_type -> wizard.UpdateWizardRequest
	5,  // 22: wizard.WizardService.ListWizards:input_type -> wizard.ListWizardsRequest
	7,  // 23: wizard.WizardService.DeleteWizard:input_type -> wizard.DeleteWizardRequest
	9,  // 24: wizard.WizardService.JoinGuild:input_type -> wizard.JoinGuildRequest
	10, // 25: wizard.WizardService.LeaveGuild:input_type -> wizard.LeaveGuildRequest
	14, // 26: wizard.WizardService.CreateJob:input_type -> wizard.CreateJobRequest
	15, // 27: wizard.WizardService.GetJob:input_type -> wizard.GetJobRequest
	16, // 28: wizard.WizardService.ListJobs:input_type -> wizard.ListJobsRequest
	18, // 29: wizard.WizardService.UpdateJob:input_type -> wizard.UpdateJobRequest
	19, // 30: wizard.WizardService.DeleteJob:input_type -> wizard.DeleteJobRequest
	21, // 31: wizard.WizardService.AssignWizardToJob:input_type -> wizard.AssignWizardToJobRequest
	22, // 32: wizard.WizardService.GetJobAssignments:input_type -> wizard.GetJobAssignmentsRequest
	24, // 33: wizard.WizardService.CompleteJobAssignment:input_type -> wizard.CompleteJobAssignmentRequest
	25, // 34: wizard.WizardService.CancelJobAssignment:input_type -> wizard.CancelJobAssignmentRequest
	26, // 35: wizard.WizardService.UpdateJobProgress:input_type -> wizard.UpdateJobProgressRequest
	27, // 36: wizard.WizardService.GetJobProgress:input_type -> wizard.GetJobProgressRequest
	28, // 37: wizard.WizardService.GetActivities:input_type -> wizard.GetActivitiesRequest
	31, // 38: wizard.WizardService.GetRealms:input_type -> wizard.GetRealmsRequest
	34, // 39: wizard.WizardService.GetManaBalance:input_type -> wizard.GetManaBalanceRequest
	36, // 40: wizard.WizardService.UpdateManaBalance:input_type -> wizard.UpdateManaBalanceRequest
	38, // 41: wizard.WizardService.TransferMana:input_type -> wizard.TransferManaRequest
	0,  // 42: wizard.WizardService.CreateWizard:output_type -> wizard.Wizard
	0,  // 43: wizard.WizardService.GetWizard:output_type -> wizard.Wizard
	0,  // 44: wizard.WizardService.UpdateWizard:output_type -> wizard.Wizard
	6,  // 45: wizard.WizardService.ListWizards:output_type -> wizard.ListWizardsResponse
	8,  // 46: wizard.WizardService.DeleteWizard:output_type -> wizard.DeleteWizardResponse
	0,  // 47: wizard.WizardService.JoinGuild:output_type -> wizard.Wizard
	0,  // 48: wizard.WizardService.LeaveGuild:output_type -> wizard.Wizard
	11, // 49: wizard.WizardService.CreateJob:output_type -> wizard.Job
	11, // 50: wizard.WizardService.GetJob:output_type -> wizard.Job
	17, // 51: wizard.WizardService.ListJobs:output_type -> wizard.ListJobsResponse
	11, // 52: wizard.WizardService.UpdateJob:output_type -> wizard.Job
	20, // 53: wizard.WizardService.DeleteJob:output_type -> wizard.DeleteJobResponse
	12, // 54: wizard.WizardService.AssignWizardToJob:output_type -> wizard.JobAssignment
	23, // 55: wizard.WizardService.GetJobAssignments:output_type -> wizard.GetJobAssignmentsResponse
	12, // 56: wizard.WizardService.CompleteJobAssignment:output_type -> wizard.JobAssignment
	12, // 57: wizard.WizardService.CancelJobAssignment:output_type -> wizard.JobAssignment
	13, // 58: wizard.WizardService.UpdateJobProgress:output_type -> wizard.JobProgress
	13, // 59: wizard.WizardService.GetJobProgress:output_type -> wizard.JobProgress
	29, // 60: wizard.WizardService.GetActivities:output_type -> wizard.GetActivitiesResponse
	32, // 61: wizard.WizardService.GetRealms:output_type -> wizard.GetRealmsResponse
	35, // 62: wizard.WizardService.GetManaBalance:output_type -> wizard.GetManaBalanceResponse
	37, // 63: wizard.WizardService.UpdateManaBalance:output_type -> wizard.UpdateManaBalanceResponse
	39, // 64: wizard.WizardService.TransferMana:output_type -> wizard.TransferManaResponse
	42, // [42:65] is the sub-list for method output_type
	19, // [19:42] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_wizard_wizard_proto_init() }
func file_proto_wizard_wizard_proto_init() {
	if File_proto_wizard_wizard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_wizard_wizard_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Wizard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Guild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateWizardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetWizardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateWizardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListWizardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListWizardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteWizardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteWizardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*JoinGuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveGuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*JobAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*JobProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ListJobsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ListJobsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*AssignWizardToJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetJobAssignmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetJobAssignmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteJobAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CancelJobAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJobProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetJobProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetActivitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GetActivitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ActivityLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GetRealmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetRealmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*Realm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GetManaBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetManaBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateManaBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateManaBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*TransferManaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_wizard_wizard_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*TransferManaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_wizard_wizard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_wizard_wizard_proto_goTypes,
		DependencyIndexes: file_proto_wizard_wizard_proto_depIdxs,
		MessageInfos:      file_proto_wizard_wizard_proto_msgTypes,
	}.Build()
	File_proto_wizard_wizard_proto = out.File
	file_proto_wizard_wizard_proto_rawDesc = nil
	file_proto_wizard_wizard_proto_goTypes = nil
	file_proto_wizard_wizard_proto_depIdxs = nil
}
