// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: proto/marketplace/marketplace.proto

package marketplace

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Artifact messages
type Artifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RealmId          int64                  `protobuf:"varint,2,opt,name=realm_id,json=realmId,proto3" json:"realm_id,omitempty"`
	RealmName        string                 `protobuf:"bytes,3,opt,name=realm_name,json=realmName,proto3" json:"realm_name,omitempty"`
	Name             string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Lore             string                 `protobuf:"bytes,6,opt,name=lore,proto3" json:"lore,omitempty"`
	PowerLevel       int32                  `protobuf:"varint,7,opt,name=power_level,json=powerLevel,proto3" json:"power_level,omitempty"`
	Rarity           string                 `protobuf:"bytes,8,opt,name=rarity,proto3" json:"rarity,omitempty"`
	ManaCost         int64                  `protobuf:"varint,9,opt,name=mana_cost,json=manaCost,proto3" json:"mana_cost,omitempty"`
	ArtifactType     string                 `protobuf:"bytes,10,opt,name=artifact_type,json=artifactType,proto3" json:"artifact_type,omitempty"`
	SpecialAbilities []string               `protobuf:"bytes,11,rep,name=special_abilities,json=specialAbilities,proto3" json:"special_abilities,omitempty"`
	Requirements     string                 `protobuf:"bytes,12,opt,name=requirements,proto3" json:"requirements,omitempty"`
	ImageUrl         string                 `protobuf:"bytes,13,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	IsAvailable      bool                   `protobuf:"varint,14,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{0}
}

func (x *Artifact) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Artifact) GetRealmId() int64 {
	if x != nil {
		return x.RealmId
	}
	return 0
}

func (x *Artifact) GetRealmName() string {
	if x != nil {
		return x.RealmName
	}
	return ""
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Artifact) GetLore() string {
	if x != nil {
		return x.Lore
	}
	return ""
}

func (x *Artifact) GetPowerLevel() int32 {
	if x != nil {
		return x.PowerLevel
	}
	return 0
}

func (x *Artifact) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *Artifact) GetManaCost() int64 {
	if x != nil {
		return x.ManaCost
	}
	return 0
}

func (x *Artifact) GetArtifactType() string {
	if x != nil {
		return x.ArtifactType
	}
	return ""
}

func (x *Artifact) GetSpecialAbilities() []string {
	if x != nil {
		return x.SpecialAbilities
	}
	return nil
}

func (x *Artifact) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

func (x *Artifact) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Artifact) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *Artifact) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type WizardArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WizardId   int64                  `protobuf:"varint,2,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	Artifact   *Artifact              `protobuf:"bytes,3,opt,name=artifact,proto3" json:"artifact,omitempty"`
	AcquiredAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=acquired_at,json=acquiredAt,proto3" json:"acquired_at,omitempty"`
	IsEquipped bool                   `protobuf:"varint,5,opt,name=is_equipped,json=isEquipped,proto3" json:"is_equipped,omitempty"`
}

func (x *WizardArtifact) Reset() {
	*x = WizardArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WizardArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WizardArtifact) ProtoMessage() {}

func (x *WizardArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WizardArtifact.ProtoReflect.Descriptor instead.
func (*WizardArtifact) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{1}
}

func (x *WizardArtifact) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WizardArtifact) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *WizardArtifact) GetArtifact() *Artifact {
	if x != nil {
		return x.Artifact
	}
	return nil
}

func (x *WizardArtifact) GetAcquiredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AcquiredAt
	}
	return nil
}

func (x *WizardArtifact) GetIsEquipped() bool {
	if x != nil {
		return x.IsEquipped
	}
	return false
}

type GetArtifactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rarity        string `protobuf:"bytes,1,opt,name=rarity,proto3" json:"rarity,omitempty"`                                       // Optional filter
	ArtifactType  string `protobuf:"bytes,2,opt,name=artifact_type,json=artifactType,proto3" json:"artifact_type,omitempty"`       // Optional filter
	MaxPowerLevel int32  `protobuf:"varint,3,opt,name=max_power_level,json=maxPowerLevel,proto3" json:"max_power_level,omitempty"` // Optional filter
	MaxManaCost   int64  `protobuf:"varint,4,opt,name=max_mana_cost,json=maxManaCost,proto3" json:"max_mana_cost,omitempty"`       // Optional filter
	PageSize      int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber    int32  `protobuf:"varint,6,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *GetArtifactsRequest) Reset() {
	*x = GetArtifactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsRequest) ProtoMessage() {}

func (x *GetArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{2}
}

func (x *GetArtifactsRequest) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *GetArtifactsRequest) GetArtifactType() string {
	if x != nil {
		return x.ArtifactType
	}
	return ""
}

func (x *GetArtifactsRequest) GetMaxPowerLevel() int32 {
	if x != nil {
		return x.MaxPowerLevel
	}
	return 0
}

func (x *GetArtifactsRequest) GetMaxManaCost() int64 {
	if x != nil {
		return x.MaxManaCost
	}
	return 0
}

func (x *GetArtifactsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetArtifactsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetArtifactsByRealmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealmId    int64 `protobuf:"varint,1,opt,name=realm_id,json=realmId,proto3" json:"realm_id,omitempty"`
	PageSize   int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber int32 `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *GetArtifactsByRealmRequest) Reset() {
	*x = GetArtifactsByRealmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsByRealmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsByRealmRequest) ProtoMessage() {}

func (x *GetArtifactsByRealmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsByRealmRequest.ProtoReflect.Descriptor instead.
func (*GetArtifactsByRealmRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{3}
}

func (x *GetArtifactsByRealmRequest) GetRealmId() int64 {
	if x != nil {
		return x.RealmId
	}
	return 0
}

func (x *GetArtifactsByRealmRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetArtifactsByRealmRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetArtifactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifacts  []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	TotalCount int64       `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetArtifactsResponse) Reset() {
	*x = GetArtifactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArtifactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArtifactsResponse) ProtoMessage() {}

func (x *GetArtifactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArtifactsResponse.ProtoReflect.Descriptor instead.
func (*GetArtifactsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{4}
}

func (x *GetArtifactsResponse) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *GetArtifactsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type PurchaseArtifactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId   int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	ArtifactId int64 `protobuf:"varint,2,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
}

func (x *PurchaseArtifactRequest) Reset() {
	*x = PurchaseArtifactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseArtifactRequest) ProtoMessage() {}

func (x *PurchaseArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseArtifactRequest.ProtoReflect.Descriptor instead.
func (*PurchaseArtifactRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{5}
}

func (x *PurchaseArtifactRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *PurchaseArtifactRequest) GetArtifactId() int64 {
	if x != nil {
		return x.ArtifactId
	}
	return 0
}

type GetWizardArtifactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
}

func (x *GetWizardArtifactsRequest) Reset() {
	*x = GetWizardArtifactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWizardArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWizardArtifactsRequest) ProtoMessage() {}

func (x *GetWizardArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWizardArtifactsRequest.ProtoReflect.Descriptor instead.
func (*GetWizardArtifactsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{6}
}

func (x *GetWizardArtifactsRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

type GetWizardArtifactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Artifacts []*WizardArtifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
}

func (x *GetWizardArtifactsResponse) Reset() {
	*x = GetWizardArtifactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWizardArtifactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWizardArtifactsResponse) ProtoMessage() {}

func (x *GetWizardArtifactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWizardArtifactsResponse.ProtoReflect.Descriptor instead.
func (*GetWizardArtifactsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{7}
}

func (x *GetWizardArtifactsResponse) GetArtifacts() []*WizardArtifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

type EquipArtifactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId   int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	ArtifactId int64 `protobuf:"varint,2,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	Equip      bool  `protobuf:"varint,3,opt,name=equip,proto3" json:"equip,omitempty"` // true to equip, false to unequip
}

func (x *EquipArtifactRequest) Reset() {
	*x = EquipArtifactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipArtifactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipArtifactRequest) ProtoMessage() {}

func (x *EquipArtifactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipArtifactRequest.ProtoReflect.Descriptor instead.
func (*EquipArtifactRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{8}
}

func (x *EquipArtifactRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *EquipArtifactRequest) GetArtifactId() int64 {
	if x != nil {
		return x.ArtifactId
	}
	return 0
}

func (x *EquipArtifactRequest) GetEquip() bool {
	if x != nil {
		return x.Equip
	}
	return false
}

type EquipArtifactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *EquipArtifactResponse) Reset() {
	*x = EquipArtifactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipArtifactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipArtifactResponse) ProtoMessage() {}

func (x *EquipArtifactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipArtifactResponse.ProtoReflect.Descriptor instead.
func (*EquipArtifactResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{9}
}

func (x *EquipArtifactResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EquipArtifactResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Scroll messages
type Scroll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SkillType     string                 `protobuf:"bytes,4,opt,name=skill_type,json=skillType,proto3" json:"skill_type,omitempty"`
	SkillLevel    int32                  `protobuf:"varint,5,opt,name=skill_level,json=skillLevel,proto3" json:"skill_level,omitempty"`
	ManaCost      int64                  `protobuf:"varint,6,opt,name=mana_cost,json=manaCost,proto3" json:"mana_cost,omitempty"`
	Prerequisites []string               `protobuf:"bytes,7,rep,name=prerequisites,proto3" json:"prerequisites,omitempty"`
	Benefits      string                 `protobuf:"bytes,8,opt,name=benefits,proto3" json:"benefits,omitempty"`
	Rarity        string                 `protobuf:"bytes,9,opt,name=rarity,proto3" json:"rarity,omitempty"`
	IsAvailable   bool                   `protobuf:"varint,10,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Scroll) Reset() {
	*x = Scroll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scroll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scroll) ProtoMessage() {}

func (x *Scroll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scroll.ProtoReflect.Descriptor instead.
func (*Scroll) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{10}
}

func (x *Scroll) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Scroll) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Scroll) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Scroll) GetSkillType() string {
	if x != nil {
		return x.SkillType
	}
	return ""
}

func (x *Scroll) GetSkillLevel() int32 {
	if x != nil {
		return x.SkillLevel
	}
	return 0
}

func (x *Scroll) GetManaCost() int64 {
	if x != nil {
		return x.ManaCost
	}
	return 0
}

func (x *Scroll) GetPrerequisites() []string {
	if x != nil {
		return x.Prerequisites
	}
	return nil
}

func (x *Scroll) GetBenefits() string {
	if x != nil {
		return x.Benefits
	}
	return ""
}

func (x *Scroll) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *Scroll) GetIsAvailable() bool {
	if x != nil {
		return x.IsAvailable
	}
	return false
}

func (x *Scroll) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type WizardScroll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WizardId     int64                  `protobuf:"varint,2,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	Scroll       *Scroll                `protobuf:"bytes,3,opt,name=scroll,proto3" json:"scroll,omitempty"`
	LearnedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=learned_at,json=learnedAt,proto3" json:"learned_at,omitempty"`
	MasteryLevel int32                  `protobuf:"varint,5,opt,name=mastery_level,json=masteryLevel,proto3" json:"mastery_level,omitempty"`
}

func (x *WizardScroll) Reset() {
	*x = WizardScroll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WizardScroll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WizardScroll) ProtoMessage() {}

func (x *WizardScroll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WizardScroll.ProtoReflect.Descriptor instead.
func (*WizardScroll) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{11}
}

func (x *WizardScroll) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WizardScroll) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *WizardScroll) GetScroll() *Scroll {
	if x != nil {
		return x.Scroll
	}
	return nil
}

func (x *WizardScroll) GetLearnedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LearnedAt
	}
	return nil
}

func (x *WizardScroll) GetMasteryLevel() int32 {
	if x != nil {
		return x.MasteryLevel
	}
	return 0
}

type GetScrollsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillType     string `protobuf:"bytes,1,opt,name=skill_type,json=skillType,proto3" json:"skill_type,omitempty"`                // Optional filter
	Rarity        string `protobuf:"bytes,2,opt,name=rarity,proto3" json:"rarity,omitempty"`                                       // Optional filter
	MaxSkillLevel int32  `protobuf:"varint,3,opt,name=max_skill_level,json=maxSkillLevel,proto3" json:"max_skill_level,omitempty"` // Optional filter
	MaxManaCost   int64  `protobuf:"varint,4,opt,name=max_mana_cost,json=maxManaCost,proto3" json:"max_mana_cost,omitempty"`       // Optional filter
	PageSize      int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber    int32  `protobuf:"varint,6,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *GetScrollsRequest) Reset() {
	*x = GetScrollsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScrollsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScrollsRequest) ProtoMessage() {}

func (x *GetScrollsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScrollsRequest.ProtoReflect.Descriptor instead.
func (*GetScrollsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{12}
}

func (x *GetScrollsRequest) GetSkillType() string {
	if x != nil {
		return x.SkillType
	}
	return ""
}

func (x *GetScrollsRequest) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *GetScrollsRequest) GetMaxSkillLevel() int32 {
	if x != nil {
		return x.MaxSkillLevel
	}
	return 0
}

func (x *GetScrollsRequest) GetMaxManaCost() int64 {
	if x != nil {
		return x.MaxManaCost
	}
	return 0
}

func (x *GetScrollsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetScrollsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetScrollsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scrolls    []*Scroll `protobuf:"bytes,1,rep,name=scrolls,proto3" json:"scrolls,omitempty"`
	TotalCount int64     `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetScrollsResponse) Reset() {
	*x = GetScrollsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScrollsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScrollsResponse) ProtoMessage() {}

func (x *GetScrollsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScrollsResponse.ProtoReflect.Descriptor instead.
func (*GetScrollsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{13}
}

func (x *GetScrollsResponse) GetScrolls() []*Scroll {
	if x != nil {
		return x.Scrolls
	}
	return nil
}

func (x *GetScrollsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type PurchaseScrollRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	ScrollId int64 `protobuf:"varint,2,opt,name=scroll_id,json=scrollId,proto3" json:"scroll_id,omitempty"`
}

func (x *PurchaseScrollRequest) Reset() {
	*x = PurchaseScrollRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseScrollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseScrollRequest) ProtoMessage() {}

func (x *PurchaseScrollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseScrollRequest.ProtoReflect.Descriptor instead.
func (*PurchaseScrollRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{14}
}

func (x *PurchaseScrollRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *PurchaseScrollRequest) GetScrollId() int64 {
	if x != nil {
		return x.ScrollId
	}
	return 0
}

type GetWizardScrollsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
}

func (x *GetWizardScrollsRequest) Reset() {
	*x = GetWizardScrollsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWizardScrollsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWizardScrollsRequest) ProtoMessage() {}

func (x *GetWizardScrollsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWizardScrollsRequest.ProtoReflect.Descriptor instead.
func (*GetWizardScrollsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{15}
}

func (x *GetWizardScrollsRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

type GetWizardScrollsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scrolls []*WizardScroll `protobuf:"bytes,1,rep,name=scrolls,proto3" json:"scrolls,omitempty"`
}

func (x *GetWizardScrollsResponse) Reset() {
	*x = GetWizardScrollsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWizardScrollsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWizardScrollsResponse) ProtoMessage() {}

func (x *GetWizardScrollsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWizardScrollsResponse.ProtoReflect.Descriptor instead.
func (*GetWizardScrollsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{16}
}

func (x *GetWizardScrollsResponse) GetScrolls() []*WizardScroll {
	if x != nil {
		return x.Scrolls
	}
	return nil
}

// Spell messages
type Spell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SpellSchool     string                 `protobuf:"bytes,4,opt,name=spell_school,json=spellSchool,proto3" json:"spell_school,omitempty"`
	Element         string                 `protobuf:"bytes,5,opt,name=element,proto3" json:"element,omitempty"` // Optional
	PowerLevel      int32                  `protobuf:"varint,6,opt,name=power_level,json=powerLevel,proto3" json:"power_level,omitempty"`
	ManaCostToLearn int64                  `protobuf:"varint,7,opt,name=mana_cost_to_learn,json=manaCostToLearn,proto3" json:"mana_cost_to_learn,omitempty"`
	ManaCostToCast  int32                  `protobuf:"varint,8,opt,name=mana_cost_to_cast,json=manaCostToCast,proto3" json:"mana_cost_to_cast,omitempty"`
	Requirements    string                 `protobuf:"bytes,9,opt,name=requirements,proto3" json:"requirements,omitempty"`
	Effects         string                 `protobuf:"bytes,10,opt,name=effects,proto3" json:"effects,omitempty"`
	Rarity          string                 `protobuf:"bytes,11,opt,name=rarity,proto3" json:"rarity,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Spell) Reset() {
	*x = Spell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spell) ProtoMessage() {}

func (x *Spell) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spell.ProtoReflect.Descriptor instead.
func (*Spell) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{17}
}

func (x *Spell) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Spell) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spell) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Spell) GetSpellSchool() string {
	if x != nil {
		return x.SpellSchool
	}
	return ""
}

func (x *Spell) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *Spell) GetPowerLevel() int32 {
	if x != nil {
		return x.PowerLevel
	}
	return 0
}

func (x *Spell) GetManaCostToLearn() int64 {
	if x != nil {
		return x.ManaCostToLearn
	}
	return 0
}

func (x *Spell) GetManaCostToCast() int32 {
	if x != nil {
		return x.ManaCostToCast
	}
	return 0
}

func (x *Spell) GetRequirements() string {
	if x != nil {
		return x.Requirements
	}
	return ""
}

func (x *Spell) GetEffects() string {
	if x != nil {
		return x.Effects
	}
	return ""
}

func (x *Spell) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *Spell) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type WizardSpell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WizardId              int64                  `protobuf:"varint,2,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	Spell                 *Spell                 `protobuf:"bytes,3,opt,name=spell,proto3" json:"spell,omitempty"`
	LearnedAt             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=learned_at,json=learnedAt,proto3" json:"learned_at,omitempty"`
	LearnedFromWizardId   int64                  `protobuf:"varint,5,opt,name=learned_from_wizard_id,json=learnedFromWizardId,proto3" json:"learned_from_wizard_id,omitempty"`      // Optional
	LearnedFromWizardName string                 `protobuf:"bytes,6,opt,name=learned_from_wizard_name,json=learnedFromWizardName,proto3" json:"learned_from_wizard_name,omitempty"` // Optional
	MasteryLevel          int32                  `protobuf:"varint,7,opt,name=mastery_level,json=masteryLevel,proto3" json:"mastery_level,omitempty"`
	TimesCast             int32                  `protobuf:"varint,8,opt,name=times_cast,json=timesCast,proto3" json:"times_cast,omitempty"`
}

func (x *WizardSpell) Reset() {
	*x = WizardSpell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WizardSpell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WizardSpell) ProtoMessage() {}

func (x *WizardSpell) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WizardSpell.ProtoReflect.Descriptor instead.
func (*WizardSpell) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{18}
}

func (x *WizardSpell) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WizardSpell) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *WizardSpell) GetSpell() *Spell {
	if x != nil {
		return x.Spell
	}
	return nil
}

func (x *WizardSpell) GetLearnedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LearnedAt
	}
	return nil
}

func (x *WizardSpell) GetLearnedFromWizardId() int64 {
	if x != nil {
		return x.LearnedFromWizardId
	}
	return 0
}

func (x *WizardSpell) GetLearnedFromWizardName() string {
	if x != nil {
		return x.LearnedFromWizardName
	}
	return ""
}

func (x *WizardSpell) GetMasteryLevel() int32 {
	if x != nil {
		return x.MasteryLevel
	}
	return 0
}

func (x *WizardSpell) GetTimesCast() int32 {
	if x != nil {
		return x.TimesCast
	}
	return 0
}

type SpellTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId       int64  `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	WizardName     string `protobuf:"bytes,2,opt,name=wizard_name,json=wizardName,proto3" json:"wizard_name,omitempty"`
	SpellId        int64  `protobuf:"varint,3,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Spell          *Spell `protobuf:"bytes,4,opt,name=spell,proto3" json:"spell,omitempty"`
	TeachingPrice  int64  `protobuf:"varint,5,opt,name=teaching_price,json=teachingPrice,proto3" json:"teaching_price,omitempty"`
	MaxStudents    int32  `protobuf:"varint,6,opt,name=max_students,json=maxStudents,proto3" json:"max_students,omitempty"` // 0 means unlimited
	StudentsTaught int32  `protobuf:"varint,7,opt,name=students_taught,json=studentsTaught,proto3" json:"students_taught,omitempty"`
}

func (x *SpellTeacher) Reset() {
	*x = SpellTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpellTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellTeacher) ProtoMessage() {}

func (x *SpellTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellTeacher.ProtoReflect.Descriptor instead.
func (*SpellTeacher) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{19}
}

func (x *SpellTeacher) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *SpellTeacher) GetWizardName() string {
	if x != nil {
		return x.WizardName
	}
	return ""
}

func (x *SpellTeacher) GetSpellId() int64 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *SpellTeacher) GetSpell() *Spell {
	if x != nil {
		return x.Spell
	}
	return nil
}

func (x *SpellTeacher) GetTeachingPrice() int64 {
	if x != nil {
		return x.TeachingPrice
	}
	return 0
}

func (x *SpellTeacher) GetMaxStudents() int32 {
	if x != nil {
		return x.MaxStudents
	}
	return 0
}

func (x *SpellTeacher) GetStudentsTaught() int32 {
	if x != nil {
		return x.StudentsTaught
	}
	return 0
}

type GetSpellsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellSchool   string `protobuf:"bytes,1,opt,name=spell_school,json=spellSchool,proto3" json:"spell_school,omitempty"`          // Optional filter
	Element       string `protobuf:"bytes,2,opt,name=element,proto3" json:"element,omitempty"`                                     // Optional filter
	Rarity        string `protobuf:"bytes,3,opt,name=rarity,proto3" json:"rarity,omitempty"`                                       // Optional filter
	MaxPowerLevel int32  `protobuf:"varint,4,opt,name=max_power_level,json=maxPowerLevel,proto3" json:"max_power_level,omitempty"` // Optional filter
	MaxManaCost   int64  `protobuf:"varint,5,opt,name=max_mana_cost,json=maxManaCost,proto3" json:"max_mana_cost,omitempty"`       // Optional filter
	PageSize      int32  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber    int32  `protobuf:"varint,7,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *GetSpellsRequest) Reset() {
	*x = GetSpellsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpellsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpellsRequest) ProtoMessage() {}

func (x *GetSpellsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpellsRequest.ProtoReflect.Descriptor instead.
func (*GetSpellsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{20}
}

func (x *GetSpellsRequest) GetSpellSchool() string {
	if x != nil {
		return x.SpellSchool
	}
	return ""
}

func (x *GetSpellsRequest) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *GetSpellsRequest) GetRarity() string {
	if x != nil {
		return x.Rarity
	}
	return ""
}

func (x *GetSpellsRequest) GetMaxPowerLevel() int32 {
	if x != nil {
		return x.MaxPowerLevel
	}
	return 0
}

func (x *GetSpellsRequest) GetMaxManaCost() int64 {
	if x != nil {
		return x.MaxManaCost
	}
	return 0
}

func (x *GetSpellsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetSpellsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetSpellsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spells     []*Spell `protobuf:"bytes,1,rep,name=spells,proto3" json:"spells,omitempty"`
	TotalCount int64    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetSpellsResponse) Reset() {
	*x = GetSpellsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpellsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpellsResponse) ProtoMessage() {}

func (x *GetSpellsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpellsResponse.ProtoReflect.Descriptor instead.
func (*GetSpellsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{21}
}

func (x *GetSpellsResponse) GetSpells() []*Spell {
	if x != nil {
		return x.Spells
	}
	return nil
}

func (x *GetSpellsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetAvailableTeachersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpellId  int64 `protobuf:"varint,1,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	MaxPrice int64 `protobuf:"varint,2,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"` // Optional filter
}

func (x *GetAvailableTeachersRequest) Reset() {
	*x = GetAvailableTeachersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTeachersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTeachersRequest) ProtoMessage() {}

func (x *GetAvailableTeachersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTeachersRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableTeachersRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{22}
}

func (x *GetAvailableTeachersRequest) GetSpellId() int64 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *GetAvailableTeachersRequest) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

type GetAvailableTeachersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teachers []*SpellTeacher `protobuf:"bytes,1,rep,name=teachers,proto3" json:"teachers,omitempty"`
}

func (x *GetAvailableTeachersResponse) Reset() {
	*x = GetAvailableTeachersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAvailableTeachersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTeachersResponse) ProtoMessage() {}

func (x *GetAvailableTeachersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTeachersResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableTeachersResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{23}
}

func (x *GetAvailableTeachersResponse) GetTeachers() []*SpellTeacher {
	if x != nil {
		return x.Teachers
	}
	return nil
}

type LearnSpellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentWizardId int64 `protobuf:"varint,1,opt,name=student_wizard_id,json=studentWizardId,proto3" json:"student_wizard_id,omitempty"`
	TeacherWizardId int64 `protobuf:"varint,2,opt,name=teacher_wizard_id,json=teacherWizardId,proto3" json:"teacher_wizard_id,omitempty"`
	SpellId         int64 `protobuf:"varint,3,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
}

func (x *LearnSpellRequest) Reset() {
	*x = LearnSpellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LearnSpellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearnSpellRequest) ProtoMessage() {}

func (x *LearnSpellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearnSpellRequest.ProtoReflect.Descriptor instead.
func (*LearnSpellRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{24}
}

func (x *LearnSpellRequest) GetStudentWizardId() int64 {
	if x != nil {
		return x.StudentWizardId
	}
	return 0
}

func (x *LearnSpellRequest) GetTeacherWizardId() int64 {
	if x != nil {
		return x.TeacherWizardId
	}
	return 0
}

func (x *LearnSpellRequest) GetSpellId() int64 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

type LearnSpellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ManaSpent int64  `protobuf:"varint,3,opt,name=mana_spent,json=manaSpent,proto3" json:"mana_spent,omitempty"`
}

func (x *LearnSpellResponse) Reset() {
	*x = LearnSpellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LearnSpellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LearnSpellResponse) ProtoMessage() {}

func (x *LearnSpellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LearnSpellResponse.ProtoReflect.Descriptor instead.
func (*LearnSpellResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{25}
}

func (x *LearnSpellResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LearnSpellResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LearnSpellResponse) GetManaSpent() int64 {
	if x != nil {
		return x.ManaSpent
	}
	return 0
}

type OfferSpellTeachingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId      int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
	SpellId       int64 `protobuf:"varint,2,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	TeachingPrice int64 `protobuf:"varint,3,opt,name=teaching_price,json=teachingPrice,proto3" json:"teaching_price,omitempty"`
	MaxStudents   int32 `protobuf:"varint,4,opt,name=max_students,json=maxStudents,proto3" json:"max_students,omitempty"` // 0 means unlimited
}

func (x *OfferSpellTeachingRequest) Reset() {
	*x = OfferSpellTeachingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferSpellTeachingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferSpellTeachingRequest) ProtoMessage() {}

func (x *OfferSpellTeachingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferSpellTeachingRequest.ProtoReflect.Descriptor instead.
func (*OfferSpellTeachingRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{26}
}

func (x *OfferSpellTeachingRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *OfferSpellTeachingRequest) GetSpellId() int64 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *OfferSpellTeachingRequest) GetTeachingPrice() int64 {
	if x != nil {
		return x.TeachingPrice
	}
	return 0
}

func (x *OfferSpellTeachingRequest) GetMaxStudents() int32 {
	if x != nil {
		return x.MaxStudents
	}
	return 0
}

type OfferSpellTeachingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *OfferSpellTeachingResponse) Reset() {
	*x = OfferSpellTeachingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferSpellTeachingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferSpellTeachingResponse) ProtoMessage() {}

func (x *OfferSpellTeachingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferSpellTeachingResponse.ProtoReflect.Descriptor instead.
func (*OfferSpellTeachingResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{27}
}

func (x *OfferSpellTeachingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OfferSpellTeachingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetWizardSpellsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId int64 `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`
}

func (x *GetWizardSpellsRequest) Reset() {
	*x = GetWizardSpellsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWizardSpellsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWizardSpellsRequest) ProtoMessage() {}

func (x *GetWizardSpellsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWizardSpellsRequest.ProtoReflect.Descriptor instead.
func (*GetWizardSpellsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{28}
}

func (x *GetWizardSpellsRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

type GetWizardSpellsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spells []*WizardSpell `protobuf:"bytes,1,rep,name=spells,proto3" json:"spells,omitempty"`
}

func (x *GetWizardSpellsResponse) Reset() {
	*x = GetWizardSpellsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWizardSpellsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWizardSpellsResponse) ProtoMessage() {}

func (x *GetWizardSpellsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWizardSpellsResponse.ProtoReflect.Descriptor instead.
func (*GetWizardSpellsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{29}
}

func (x *GetWizardSpellsResponse) GetSpells() []*WizardSpell {
	if x != nil {
		return x.Spells
	}
	return nil
}

// Common messages
type PurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ManaSpent     int64  `protobuf:"varint,3,opt,name=mana_spent,json=manaSpent,proto3" json:"mana_spent,omitempty"`
	RemainingMana int64  `protobuf:"varint,4,opt,name=remaining_mana,json=remainingMana,proto3" json:"remaining_mana,omitempty"`
}

func (x *PurchaseResponse) Reset() {
	*x = PurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseResponse) ProtoMessage() {}

func (x *PurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseResponse.ProtoReflect.Descriptor instead.
func (*PurchaseResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{30}
}

func (x *PurchaseResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PurchaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PurchaseResponse) GetManaSpent() int64 {
	if x != nil {
		return x.ManaSpent
	}
	return 0
}

func (x *PurchaseResponse) GetRemainingMana() int64 {
	if x != nil {
		return x.RemainingMana
	}
	return 0
}

type MarketplaceTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BuyerWizardId    int64                  `protobuf:"varint,2,opt,name=buyer_wizard_id,json=buyerWizardId,proto3" json:"buyer_wizard_id,omitempty"`
	BuyerWizardName  string                 `protobuf:"bytes,3,opt,name=buyer_wizard_name,json=buyerWizardName,proto3" json:"buyer_wizard_name,omitempty"`
	TransactionType  string                 `protobuf:"bytes,4,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"` // "artifact", "scroll", "spell_learning"
	ItemId           int64                  `protobuf:"varint,5,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName         string                 `protobuf:"bytes,6,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	ManaSpent        int64                  `protobuf:"varint,7,opt,name=mana_spent,json=manaSpent,proto3" json:"mana_spent,omitempty"`
	SellerWizardId   int64                  `protobuf:"varint,8,opt,name=seller_wizard_id,json=sellerWizardId,proto3" json:"seller_wizard_id,omitempty"`      // Optional, for spell learning
	SellerWizardName string                 `protobuf:"bytes,9,opt,name=seller_wizard_name,json=sellerWizardName,proto3" json:"seller_wizard_name,omitempty"` // Optional
	TransactionDate  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=transaction_date,json=transactionDate,proto3" json:"transaction_date,omitempty"`
	Notes            string                 `protobuf:"bytes,11,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *MarketplaceTransaction) Reset() {
	*x = MarketplaceTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketplaceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketplaceTransaction) ProtoMessage() {}

func (x *MarketplaceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketplaceTransaction.ProtoReflect.Descriptor instead.
func (*MarketplaceTransaction) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{31}
}

func (x *MarketplaceTransaction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MarketplaceTransaction) GetBuyerWizardId() int64 {
	if x != nil {
		return x.BuyerWizardId
	}
	return 0
}

func (x *MarketplaceTransaction) GetBuyerWizardName() string {
	if x != nil {
		return x.BuyerWizardName
	}
	return ""
}

func (x *MarketplaceTransaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *MarketplaceTransaction) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *MarketplaceTransaction) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *MarketplaceTransaction) GetManaSpent() int64 {
	if x != nil {
		return x.ManaSpent
	}
	return 0
}

func (x *MarketplaceTransaction) GetSellerWizardId() int64 {
	if x != nil {
		return x.SellerWizardId
	}
	return 0
}

func (x *MarketplaceTransaction) GetSellerWizardName() string {
	if x != nil {
		return x.SellerWizardName
	}
	return ""
}

func (x *MarketplaceTransaction) GetTransactionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionDate
	}
	return nil
}

func (x *MarketplaceTransaction) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type GetMarketplaceTransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WizardId        int64  `protobuf:"varint,1,opt,name=wizard_id,json=wizardId,proto3" json:"wizard_id,omitempty"`                     // Optional filter for specific wizard
	TransactionType string `protobuf:"bytes,2,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"` // Optional filter
	PageSize        int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageNumber      int32  `protobuf:"varint,4,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
}

func (x *GetMarketplaceTransactionsRequest) Reset() {
	*x = GetMarketplaceTransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketplaceTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketplaceTransactionsRequest) ProtoMessage() {}

func (x *GetMarketplaceTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketplaceTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetMarketplaceTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{32}
}

func (x *GetMarketplaceTransactionsRequest) GetWizardId() int64 {
	if x != nil {
		return x.WizardId
	}
	return 0
}

func (x *GetMarketplaceTransactionsRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GetMarketplaceTransactionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMarketplaceTransactionsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

type GetMarketplaceTransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*MarketplaceTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TotalCount   int64                     `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *GetMarketplaceTransactionsResponse) Reset() {
	*x = GetMarketplaceTransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_marketplace_marketplace_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketplaceTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketplaceTransactionsResponse) ProtoMessage() {}

func (x *GetMarketplaceTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_marketplace_marketplace_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketplaceTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetMarketplaceTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_marketplace_marketplace_proto_rawDescGZIP(), []int{33}
}

func (x *GetMarketplaceTransactionsResponse) GetTransactions() []*MarketplaceTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *GetMarketplaceTransactionsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_proto_marketplace_marketplace_proto protoreflect.FileDescriptor

var file_proto_marketplace_marketplace_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x03, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x0e,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x3b,
	0x0a, 0x0b, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x22, 0xdc, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x52, 0x65, 0x61,
	0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0x6c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x57, 0x0a, 0x17, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x22, 0x6a, 0x0a, 0x14,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x65, 0x71, 0x75, 0x69, 0x70, 0x22, 0x4b, 0x0a, 0x15, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe3, 0x02, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x6e, 0x61, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x6e,
	0x65, 0x66, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x0c,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x63, 0x72,
	0x6f, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x06,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xd4, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61,
	0x78, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x6d,
	0x61, 0x78, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x64, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2e, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c,
	0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x15, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x72,
	0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x4f,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x63, 0x72, 0x6f, 0x6c,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x22,
	0x94, 0x03, 0x0a, 0x05, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2b, 0x0a,
	0x12, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x65,
	0x61, 0x72, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x43,
	0x6f, 0x73, 0x74, 0x54, 0x6f, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x61,
	0x6e, 0x61, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x54,
	0x6f, 0x43, 0x61, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd1, 0x02, 0x0a, 0x0b, 0x57, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x05, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x39, 0x0a,
	0x0a, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x37, 0x0a,
	0x18, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x77, 0x69,
	0x7a, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x43, 0x61, 0x73, 0x74, 0x22, 0x84, 0x02, 0x0a, 0x0c, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x05, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x61, 0x75, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x75, 0x67, 0x68,
	0x74, 0x22, 0xf1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x5f,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x4d,
	0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x70,
	0x65, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x06,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x55,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x08, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x57,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0x67,
	0x0a, 0x12, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61,
	0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61,
	0x6e, 0x61, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x50, 0x0a, 0x1a, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65,
	0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x73,
	0x70, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x06, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0x8c, 0x01,
	0x0a, 0x10, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x73,
	0x70, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61,
	0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x22, 0xb1, 0x03, 0x0a,
	0x16, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x75, 0x79, 0x65, 0x72,
	0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x62, 0x75, 0x79, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x6e, 0x61, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x61, 0x6e, 0x61, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x57, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x77, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x22, 0xa9, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x7a, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x8e, 0x01, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xdb, 0x0a,
	0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x52, 0x65, 0x61,
	0x6c, 0x6d, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x42, 0x79, 0x52,
	0x65, 0x61, 0x6c, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x10, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72,
	0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x45, 0x71, 0x75, 0x69, 0x70, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x12, 0x1e, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x63, 0x72, 0x6f, 0x6c,
	0x6c, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a,
	0x61, 0x72, 0x64, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61,
	0x72, 0x64, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x12,
	0x28, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x14, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x53,
	0x70, 0x65, 0x6c, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x12, 0x1e,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61,
	0x72, 0x6e, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x67, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x70, 0x65, 0x6c, 0x6c,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x54, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x23, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x53, 0x70, 0x65, 0x6c, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x78,
	0x2f, 0x6d, 0x79, 0x73, 0x74, 0x69, 0x63, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_marketplace_marketplace_proto_rawDescOnce sync.Once
	file_proto_marketplace_marketplace_proto_rawDescData = file_proto_marketplace_marketplace_proto_rawDesc
)

func file_proto_marketplace_marketplace_proto_rawDescGZIP() []byte {
	file_proto_marketplace_marketplace_proto_rawDescOnce.Do(func() {
		file_proto_marketplace_marketplace_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_marketplace_marketplace_proto_rawDescData)
	})
	return file_proto_marketplace_marketplace_proto_rawDescData
}

var file_proto_marketplace_marketplace_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_proto_marketplace_marketplace_proto_goTypes = []any{
	(*Artifact)(nil),                           // 0: marketplace.Artifact
	(*WizardArtifact)(nil),                     // 1: marketplace.WizardArtifact
	(*GetArtifactsRequest)(nil),                // 2: marketplace.GetArtifactsRequest
	(*GetArtifactsByRealmRequest)(nil),         // 3: marketplace.GetArtifactsByRealmRequest
	(*GetArtifactsResponse)(nil),               // 4: marketplace.GetArtifactsResponse
	(*PurchaseArtifactRequest)(nil),            // 5: marketplace.PurchaseArtifactRequest
	(*GetWizardArtifactsRequest)(nil),          // 6: marketplace.GetWizardArtifactsRequest
	(*GetWizardArtifactsResponse)(nil),         // 7: marketplace.GetWizardArtifactsResponse
	(*EquipArtifactRequest)(nil),               // 8: marketplace.EquipArtifactRequest
	(*EquipArtifactResponse)(nil),              // 9: marketplace.EquipArtifactResponse
	(*Scroll)(nil),                             // 10: marketplace.Scroll
	(*WizardScroll)(nil),                       // 11: marketplace.WizardScroll
	(*GetScrollsRequest)(nil),                  // 12: marketplace.GetScrollsRequest
	(*GetScrollsResponse)(nil),                 // 13: marketplace.GetScrollsResponse
	(*PurchaseScrollRequest)(nil),              // 14: marketplace.PurchaseScrollRequest
	(*GetWizardScrollsRequest)(nil),            // 15: marketplace.GetWizardScrollsRequest
	(*GetWizardScrollsResponse)(nil),           // 16: marketplace.GetWizardScrollsResponse
	(*Spell)(nil),                              // 17: marketplace.Spell
	(*WizardSpell)(nil),                        // 18: marketplace.WizardSpell
	(*SpellTeacher)(nil),                       // 19: marketplace.SpellTeacher
	(*GetSpellsRequest)(nil),                   // 20: marketplace.GetSpellsRequest
	(*GetSpellsResponse)(nil),                  // 21: marketplace.GetSpellsResponse
	(*GetAvailableTeachersRequest)(nil),        // 22: marketplace.GetAvailableTeachersRequest
	(*GetAvailableTeachersResponse)(nil),       // 23: marketplace.GetAvailableTeachersResponse
	(*LearnSpellRequest)(nil),                  // 24: marketplace.LearnSpellRequest
	(*LearnSpellResponse)(nil),                 // 25: marketplace.LearnSpellResponse
	(*OfferSpellTeachingRequest)(nil),          // 26: marketplace.OfferSpellTeachingRequest
	(*OfferSpellTeachingResponse)(nil),         // 27: marketplace.OfferSpellTeachingResponse
	(*GetWizardSpellsRequest)(nil),             // 28: marketplace.GetWizardSpellsRequest
	(*GetWizardSpellsResponse)(nil),            // 29: marketplace.GetWizardSpellsResponse
	(*PurchaseResponse)(nil),                   // 30: marketplace.PurchaseResponse
	(*MarketplaceTransaction)(nil),             // 31: marketplace.MarketplaceTransaction
	(*GetMarketplaceTransactionsRequest)(nil),  // 32: marketplace.GetMarketplaceTransactionsRequest
	(*GetMarketplaceTransactionsResponse)(nil), // 33: marketplace.GetMarketplaceTransactionsResponse
	(*timestamppb.Timestamp)(nil),              // 34: google.protobuf.Timestamp
}
var file_proto_marketplace_marketplace_proto_depIdxs = []int32{
	34, // 0: marketplace.Artifact.created_at:type_name -> google.protobuf.Timestamp
	0,  // 1: marketplace.WizardArtifact.artifact:type_name -> marketplace.Artifact
	34, // 2: marketplace.WizardArtifact.acquired_at:type_name -> google.protobuf.Timestamp
	0,  // 3: marketplace.GetArtifactsResponse.artifacts:type_name -> marketplace.Artifact
	1,  // 4: marketplace.GetWizardArtifactsResponse.artifacts:type_name -> marketplace.WizardArtifact
	34, // 5: marketplace.Scroll.created_at:type_name -> google.protobuf.Timestamp
	10, // 6: marketplace.WizardScroll.scroll:type_name -> marketplace.Scroll
	34, // 7: marketplace.WizardScroll.learned_at:type_name -> google.protobuf.Timestamp
	10, // 8: marketplace.GetScrollsResponse.scrolls:type_name -> marketplace.Scroll
	11, // 9: marketplace.GetWizardScrollsResponse.scrolls:type_name -> marketplace.WizardScroll
	34, // 10: marketplace.Spell.created_at:type_name -> google.protobuf.Timestamp
	17, // 11: marketplace.WizardSpell.spell:type_name -> marketplace.Spell
	34, // 12: marketplace.WizardSpell.learned_at:type_name -> google.protobuf.Timestamp
	17, // 13: marketplace.SpellTeacher.spell:type_name -> marketplace.Spell
	17, // 14: marketplace.GetSpellsResponse.spells:type_name -> marketplace.Spell
	19, // 15: marketplace.GetAvailableTeachersResponse.teachers:type_name -> marketplace.SpellTeacher
	18, // 16: marketplace.GetWizardSpellsResponse.spells:type_name -> marketplace.WizardSpell
	34, // 17: marketplace.MarketplaceTransaction.transaction_date:type_name -> google.protobuf.Timestamp
	31, // 18: marketplace.GetMarketplaceTransactionsResponse.transactions:type_name -> marketplace.MarketplaceTransaction
	2,  // 19: marketplace.MarketplaceService.GetArtifacts:input_type -> marketplace.GetArtifactsRequest
	3,  // 20: marketplace.MarketplaceService.GetArtifactsByRealm:input_type -> marketplace.GetArtifactsByRealmRequest
	5,  // 21: marketplace.MarketplaceService.PurchaseArtifact:input_type -> marketplace.PurchaseArtifactRequest
	6,  // 22: marketplace.MarketplaceService.GetWizardArtifacts:input_type -> marketplace.GetWizardArtifactsRequest
	8,  // 23: marketplace.MarketplaceService.EquipArtifact:input_type -> marketplace.EquipArtifactRequest
	12, // 24: marketplace.MarketplaceService.GetScrolls:input_type -> marketplace.GetScrollsRequest
	14, // 25: marketplace.MarketplaceService.PurchaseScroll:input_type -> marketplace.PurchaseScrollRequest
	15, // 26: marketplace.MarketplaceService.GetWizardScrolls:input_type -> marketplace.GetWizardScrollsRequest
	20, // 27: marketplace.MarketplaceService.GetSpells:input_type -> marketplace.GetSpellsRequest
	22, // 28: marketplace.MarketplaceService.GetAvailableTeachers:input_type -> marketplace.GetAvailableTeachersRequest
	24, // 29: marketplace.MarketplaceService.LearnSpellFromWizard:input_type -> marketplace.LearnSpellRequest
	26, // 30: marketplace.MarketplaceService.OfferSpellTeaching:input_type -> marketplace.OfferSpellTeachingRequest
	28, // 31: marketplace.MarketplaceService.GetWizardSpells:input_type -> marketplace.GetWizardSpellsRequest
	32, // 32: marketplace.MarketplaceService.GetMarketplaceTransactions:input_type -> marketplace.GetMarketplaceTransactionsRequest
	4,  // 33: marketplace.MarketplaceService.GetArtifacts:output_type -> marketplace.GetArtifactsResponse
	4,  // 34: marketplace.MarketplaceService.GetArtifactsByRealm:output_type -> marketplace.GetArtifactsResponse
	30, // 35: marketplace.MarketplaceService.PurchaseArtifact:output_type -> marketplace.PurchaseResponse
	7,  // 36: marketplace.MarketplaceService.GetWizardArtifacts:output_type -> marketplace.GetWizardArtifactsResponse
	9,  // 37: marketplace.MarketplaceService.EquipArtifact:output_type -> marketplace.EquipArtifactResponse
	13, // 38: marketplace.MarketplaceService.GetScrolls:output_type -> marketplace.GetScrollsResponse
	30, // 39: marketplace.MarketplaceService.PurchaseScroll:output_type -> marketplace.PurchaseResponse
	16, // 40: marketplace.MarketplaceService.GetWizardScrolls:output_type -> marketplace.GetWizardScrollsResponse
	21, // 41: marketplace.MarketplaceService.GetSpells:output_type -> marketplace.GetSpellsResponse
	23, // 42: marketplace.MarketplaceService.GetAvailableTeachers:output_type -> marketplace.GetAvailableTeachersResponse
	25, // 43: marketplace.MarketplaceService.LearnSpellFromWizard:output_type -> marketplace.LearnSpellResponse
	27, // 44: marketplace.MarketplaceService.OfferSpellTeaching:output_type -> marketplace.OfferSpellTeachingResponse
	29, // 45: marketplace.MarketplaceService.GetWizardSpells:output_type -> marketplace.GetWizardSpellsResponse
	33, // 46: marketplace.MarketplaceService.GetMarketplaceTransactions:output_type -> marketplace.GetMarketplaceTransactionsResponse
	33, // [33:47] is the sub-list for method output_type
	19, // [19:33] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_marketplace_marketplace_proto_init() }
func file_proto_marketplace_marketplace_proto_init() {
	if File_proto_marketplace_marketplace_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_marketplace_marketplace_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Artifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*WizardArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetArtifactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetArtifactsByRealmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetArtifactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PurchaseArtifactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetWizardArtifactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetWizardArtifactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*EquipArtifactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*EquipArtifactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Scroll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*WizardScroll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetScrollsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetScrollsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PurchaseScrollRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetWizardScrollsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetWizardScrollsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Spell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*WizardSpell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SpellTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetSpellsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetSpellsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetAvailableTeachersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetAvailableTeachersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*LearnSpellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*LearnSpellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*OfferSpellTeachingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*OfferSpellTeachingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GetWizardSpellsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*GetWizardSpellsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*PurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*MarketplaceTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetMarketplaceTransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_marketplace_marketplace_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetMarketplaceTransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_marketplace_marketplace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_marketplace_marketplace_proto_goTypes,
		DependencyIndexes: file_proto_marketplace_marketplace_proto_depIdxs,
		MessageInfos:      file_proto_marketplace_marketplace_proto_msgTypes,
	}.Build()
	File_proto_marketplace_marketplace_proto = out.File
	file_proto_marketplace_marketplace_proto_rawDesc = nil
	file_proto_marketplace_marketplace_proto_goTypes = nil
	file_proto_marketplace_marketplace_proto_depIdxs = nil
}
